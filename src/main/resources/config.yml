# Documentation:
# https://github.com/jacky8399/PortableBeacons/blob/master/src/main/resources/config.yml

# The configuration version. Shouldn't be modified.
config-version: 2
# Configuration related to beacon items
# Use /pb updateitems to mark preexisting items for update
# Items will be updated when they are next ticked
beacon-item:

  name: Portable Beacon # Note: players can of course rename the item in anvils

  # Supports PlaceholderAPI placeholders.
  # Note that placeholders will only be updated
  # when an item update is triggered (/pb updateitems or /pb item update <players>)
  lore:
    - '&7Shift+right click to configure potion effects'
  custom-model-data: -1 # Custom model data; Set to -1 to disable

  # Show a glowing outline around nearby beacons to players who can perform a ritual
  creation-reminder:
    enabled: true
    # Message in chat, set to empty string to disable
    message: '&aAn item in your inventory is resonating with a nearby beacon...'
    radius: 8 # Scan radius
    # Skip player if they already have a portable beacon in their inventory
    disable-if-already-own-beacon-item: true

  # Enchantments to further enhance the effects of a portable beacon
  # See recipes.yml
  custom-enchantments:
    # Reduces the experience upkeep
    exp-reduction:
      enabled: true
      # Placeholders:
      # {level} or {level|number} to get enchantment level
      # {exp-reduction} to get experience reduction (e.g. 20%) in percentage
      # {exp-reduction|multiplier} to get experience multiplier (e.g. 80%) in percentage
      # {exp-reduction|multiplier or reduction|number} to get experience multiplier/reduction (e.g. 20% vs 0.2) in decimal
      name: '&dExperience Efficiency {level}&8 (-{exp-reduction} exp consumption)'
      reduction-per-level: 0.2 # -20% exp consumption per level
      max-level: 5

    # Retain beacon item on death
    soulbound:
      enabled: true
      # Placeholders:
      # {level} or {level|number} to get enchantment level
      # {soulbound-owner} to get name of soulbound owner
      # {soulbound-owner|uuid} to get UUID of soulbound owner
      # {soulbound-owner|name|Your custom text} to change the displayed text when the owner's name cannot be found (This is usually unnecessary)
      name: '&4Soulbound {level}&8 to {soulbound-owner}'
      max-level: 5
      # whether a level will be deducted on death
      consume-level-on-death: true
      # whether item will stop working for others if it was ever soulbound to any player
      owner-usage-only: false
      # just for fun: the item cannot be dropped/moved if it contains soulbound and a negative effect!
      # (note: protection not comprehensive)
      just-for-fun-curse-of-binding: false

    # Share beacon effects with nearby players
    beaconator:
      enabled: true
      # Placeholders:
      # {level} or {level|number} to get enchantment level
      # {radius} to get current radius
      # {max-radius} to get max radius permitted by enchantment level
      name: '&bBeaconator {level}'
      # The multiplier added on top of the base experience cost.
      # final_exp_cost = base_exp_cost * (1 + players_in_range * multiplier)
      # Supports constants and PlaceholderAPI placeholders.
      in-range-cost-multiplier: 0.1
      # Whether particles flying towards players in range will be shown when the player is holding the beacon.
      show-in-range: true
      # The radius and base experience cost for each enchantment level.
      # Default radius is half the vanilla range
      levels:
        - radius: 10
          # Supports all exp-cost values, including PlaceholderAPI placeholders (Default: unspecified)
          # If unspecified, the exp cost will be the same as the level
          # Note that this will not be used in crafting cost calculations.
          #exp-cost: %math_{_dynamic}*1%
        - radius: 15
        - radius: 20
        - radius: 25

  # Effects Toggle GUI
  # Player must have permission portablebeacons.effects-toggle
  effects-toggle:
    enabled: true
    title: "&5Toggle Potion Effects"
    # Format: https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/text/MessageFormat.html]
    # {usage} to get how long it takes to consume one level
    # {usage|format} to change the displayed format (Default: "0.#")
    #   (See: https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/text/DecimalFormat.html)
    # {player-level} to get the player level
    # {remaining-time} to get how long the player can sustain the beacon
    # {remaining-time|format} to change the displayed format (Default: "0")
    exp-usage-message: |-
      &6Consumes 1 level every &e{usage}&6 seconds
      &8  Your &7{player-level}&8 levels can sustain 
      &8  this beacon for &7{remaining-time}&8 seconds
      &2Detailed breakdown:
    breakdown:
      enabled: true
      # For effects with exp-cost
      # Placeholders: {name}, {level}, {cost}
      effect: '{name} {level}&7: {cost} levels/min'
      # For other effects
      # Placeholders: {count}, {cost}
      effects: '&7{count} effects: {cost} levels/min'
      # The base cost of beaconator
      # Placeholders: {level}, {cost}
      beaconator-base: '&bBeaconator {level}: {cost} levels/min'
      # The in-range cost of beaconator
      # Placeholders: {count}, {cost}
      beaconator-in-range: '&7  {count} players: {cost} levels/min'
      # The multiplier applied by exp-reduction
      # Placeholders: all exp-reduction placeholders
      exp-reduction: '&dExperience Efficiency {level}: x{exp-reduction|multiplier}'
      # Placeholder: {cost}
      sum: '&7= {cost} levels/min'

    # Whether the player can disable negative effects
    allow-disabling-negative-effects: false
    # Require individual permission for toggling effects (portablebeacons.effects-toggle.<effect name>)
    require-permission: false

  # Futile attempts to balance portable beacons
  nerfs:
    # Experience levels consumed per minute (set to 0 to disable)
    # upkeep per minute = value * (levels of every effect + levels of custom enchantments)
    # With the default value, the upkeep is 1 level/minute for a beacon with 6 Level III effects
    # The correct amount of experience is checked and deducted every 3.75 seconds
    exp-levels-per-minute: 0.0555555552
    # Whether the beacon should be active only when it is in the hotbar
    only-apply-in-hotbar: false
    # If true, downgrade all effects stronger than its max-amplifier (see effects.<effect-name>.max-amplifier)
    # Note: requires an item update (/pb updateitems) to take effect
    force-downgrade: false
    # Portable beacons will be disabled in these worlds
    # For finer control, use WorldGuard
    disabled-worlds:
      - disabled_world_1
      - disabled_world_2

# Specify the name and custom behavior of different potion effects
# Documentation: https://github.com/jacky8399/PortableBeacons/wiki/Effects
effects:
  default:
    # How long the effects will last when applied, in ticks
    duration: 280
    # The maximum amplifier allowed in recipes
    # To apply this change retroactively, see beacon-item.nerfs.force-downgrade
    max-amplifier: 3
    # Set to true to hide particles for the effect, false to use beacon ambient effect
    hide-particles: false
  # You can override more potion effects. The key must match vanilla names.
  # Specified properties override values from the default section.
  # For additional properties, refer to the documentation.
  # For example, to prevent the night vision effect from flickering:
  night_vision:
    duration: 400

# Ritual to create portable beacons by dropping an item onto an active beacon
ritual:
  enabled: true
  __: ritual.item is saved by the plugin! If it is empty, the default (32x nether_star) is used
  item:

world-interactions:
  # Allow players to place down portable beacons, rebuilding the original beacon pyramid
  # (The ritual item will not be refunded)
  # Beware of dupe exploits allowing duplication of beacon base blocks!
  placement-enabled: false
  # Allow beacons to be picked up by mining when the ritual item is AIR (/pb setritualitem with empty hand)
  pickup-enabled: true
  # Require silk touch tool to pick up
  pickup-requires-silk-touch: true

# Enable WorldGuard integration
world-guard: true